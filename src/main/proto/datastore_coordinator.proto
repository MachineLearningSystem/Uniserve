syntax = "proto3";

option java_multiple_files = true;
option java_package = "edu.stanford.futuredata.uniserve";
option java_outer_classname = "DataStoreCoordinatorProto";

package datastorecoordinator;

// Communication from datastores to the coordinator.
service DataStoreCoordinator {
    // Register a newly started datastore with the coordinator.
    rpc RegisterDataStore (RegisterDataStoreMessage) returns (RegisterDataStoreResponse) {}
    // Tell the coordinator about a newly uploaded shard version.
    rpc ShardUpdate (ShardUpdateMessage) returns (ShardUpdateResponse) {}
    // Warn the coordinator that a datastore may be down.
    rpc PotentialDSFailure (PotentialDSFailureMessage) returns (PotentialDSFailureResponse) {}
}

message RegisterDataStoreMessage {
    string host = 1;
    int32 port = 2;
}

message RegisterDataStoreResponse {
    int32 returnCode = 1;
    int32 dataStoreID = 2;
}

message ShardUpdateMessage {
    int32 shardNum = 1;
    string shardCloudName = 2;
    int32 versionNumber = 3;
}

message ShardUpdateResponse {
    int32 returnCode = 1;
}

message PotentialDSFailureMessage {
    int32 dsID = 1;
}

message PotentialDSFailureResponse {}