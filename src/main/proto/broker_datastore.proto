syntax = "proto3";

option java_multiple_files = true;
option java_package = "edu.stanford.futuredata.uniserve";
option java_outer_classname = "BrokerDataStoreProto";

package brokerdatastore;

// Communication from brokers to datastores.
service BrokerDataStore {
    // Pre-commit (2PC-style) a write query.
    rpc WriteQueryPreCommit (stream WriteQueryPreCommitMessage) returns (WriteQueryPreCommitResponse) {}
    // Commit (or abort) a write query.
    rpc WriteQueryCommit (WriteQueryCommitMessage) returns (WriteQueryCommitResponse) {}
    // Make a read query to a DataStore server.  Return a response.
    rpc ReadQuery (ReadQueryMessage) returns (ReadQueryResponse) {}
}

message WriteQueryPreCommitMessage {
    int32 shard = 1;
    bytes serializedQuery = 2;
    bytes rowData = 3;
    int64 txID = 4;
}

message WriteQueryPreCommitResponse {
    int32 returnCode = 1;
}

message WriteQueryCommitMessage {
    int32 shard = 1;
    bool commitOrAbort = 2; // Commit on true, abort on false
    int64 txID = 3;
}

message WriteQueryCommitResponse {

}

message ReadQueryMessage {
    int32 shard = 1;
    bytes serializedQuery = 2;
}

message ReadQueryResponse {
    int32 returnCode = 1;
    bytes response = 2;
}