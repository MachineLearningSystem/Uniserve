syntax = "proto3";

option java_multiple_files = true;
option java_package = "edu.stanford.futuredata.uniserve";
option java_outer_classname = "BrokerDataStoreProto";

package brokerdatastore;

// Communication from brokers to datastores.
service BrokerDataStore {
    // Execute (2PC-style) a write query.
    rpc WriteQuery (stream WriteQueryMessage) returns (WriteQueryResponse) {}
    // Make a read query to a DataStore server.  Return a response.
    rpc AnchoredReadQuery (AnchoredReadQueryMessage) returns (AnchoredReadQueryResponse) {}
    // Make a read query to a DataStore server.  Return a response.
    rpc ShuffleReadQuery (ShuffleReadQueryMessage) returns (ShuffleReadQueryResponse) {}
    // Register a materialized view on a DataStore.
    rpc RegisterMaterializedView (RegisterMaterializedViewMessage) returns (RegisterMaterializedViewResponse);
    // Query a materialized view.
    rpc QueryMaterializedView (QueryMaterializedViewMessage) returns (QueryMaterializedViewResponse);
}

message WriteQueryMessage {
    int32 shard = 1;
    bytes serializedQuery = 2;
    bytes rowData = 3;
    int64 txID = 4;
    int32 writeState = 5;
}

message WriteQueryResponse {
    int32 returnCode = 1;
}

message AnchoredReadQueryMessage {
    int32 targetShard = 1;
    bytes serializedQuery = 2;
    int32 numReducers = 3;
    int64 txID = 4;
    bytes targetShards = 5;
}

message AnchoredReadQueryResponse {
    int32 returnCode = 1;
    bytes response = 2;
}

message ShuffleReadQueryMessage {
    bytes serializedQuery = 1;
    int32 reducerNum = 2;
    int32 numReducers = 3;
    int64 txID = 4;
    bytes targetShards = 5;
}

message ShuffleReadQueryResponse {
    int32 returnCode = 1;
    bytes response = 2;
}

message RegisterMaterializedViewMessage {
    int32 shard = 1;
    bytes serializedQuery = 2;
    string name = 3;
}

message RegisterMaterializedViewResponse {
    int32 returnCode = 1;
}

message QueryMaterializedViewMessage {
    int32 shard = 1;
    string name = 2;
}

message QueryMaterializedViewResponse {
    int32 returnCode = 1;
    bytes response = 2;
}