syntax = "proto3";

option java_multiple_files = true;
option java_package = "edu.stanford.futuredata.uniserve";
option java_outer_classname = "BrokerDataStoreProto";

package brokerdatastore;

// Communication from brokers to datastores.
service BrokerDataStore {
    // Execute (2PC-style) a write query.
    rpc WriteQuery (stream WriteQueryMessage) returns (WriteQueryResponse) {}
    // Make a read query to a DataStore server.  Return a response.
    rpc ReadQuery (ReadQueryMessage) returns (ReadQueryResponse) {}
    // Make a read query that requires a shuffle.
    rpc ReadShuffleQuery (ReadShuffleQueryMessage) returns (ReadShuffleQueryResponse) {}
    // Register a materialized view on a DataStore.
    rpc RegisterMaterializedView (RegisterMaterializedViewMessage) returns (RegisterMaterializedViewResponse);
    // Query a materialized view.
    rpc QueryMaterializedView (QueryMaterializedViewMessage) returns (QueryMaterializedViewResponse);
}

message WriteQueryMessage {
    int32 shard = 1;
    bytes serializedQuery = 2;
    bytes rowData = 3;
    int64 txID = 4;
    int32 writeState = 5;
}

message WriteQueryResponse {
    int32 returnCode = 1;
}

message ReadQueryMessage {
    int32 shard = 1;
    bytes serializedQuery = 2;
}

message ReadQueryResponse {
    int32 returnCode = 1;
    bytes response = 2;
}

message ReadShuffleQueryMessage {
    bytes serializedQuery = 1;
    int32 bucketNum = 2;
    int32 numBuckets = 3;
}

message ReadShuffleQueryResponse {
    int32 returnCode = 1;
    bytes response = 2;
}

message RegisterMaterializedViewMessage {
    int32 shard = 1;
    bytes serializedQuery = 2;
    string name = 3;
}

message RegisterMaterializedViewResponse {
    int32 returnCode = 1;
}

message QueryMaterializedViewMessage {
    int32 shard = 1;
    string name = 2;
}

message QueryMaterializedViewResponse {
    int32 returnCode = 1;
    bytes response = 2;
}