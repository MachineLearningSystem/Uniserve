syntax = "proto3";

option java_multiple_files = true;
option java_package = "edu.stanford.futuredata.uniserve";
option java_outer_classname = "CoordinatorDataStoreProto";

package coordinatordatastore;

// Communication from coordinator to the datastores.
service CoordinatorDataStore {
    // Create a new shard on a datastore.
    rpc createNewShard (CreateNewShardMessage) returns (CreateNewShardResponse) {}
    // Load a replica shard on a datastore.
    rpc loadShardReplica (LoadShardReplicaMessage) returns (LoadShardReplicaResponse) {}
    // Ping a datastore to see if it's alive.
    rpc CoordinatorPing (CoordinatorPingMessage) returns (CoordinatorPingResponse) {}
    // Promote a replica shard to primary.
    rpc PromoteReplicaShard (PromoteReplicaShardMessage) returns (PromoteReplicaShardResponse) {}
    // Remove a shard from a datastore.
    rpc removeShard (RemoveShardMessage) returns (RemoveShardResponse) {}
    // Ask a datastore for shard usage information.
    rpc shardUsage (ShardUsageMessage) returns (ShardUsageResponse) {}
}

message CreateNewShardMessage {
    int32 shard = 1;
}

message CreateNewShardResponse {
    int32 returnCode = 1;
}

message LoadShardReplicaMessage {
    int32 shard = 1;
    bool isReplacementPrimary = 2;
}

message LoadShardReplicaResponse {
    int32 returnCode = 1;
}

message CoordinatorPingMessage {}

message CoordinatorPingResponse {}

message PromoteReplicaShardMessage {
    int32 shard = 1;
}

message PromoteReplicaShardResponse {}

message RemoveShardMessage {
    int32 shard = 1;
}

message RemoveShardResponse {}

message ShardUsageMessage {}

message ShardUsageResponse {
    map<int32, int32> shardQPS = 1;
    map<int32, int32> shardMemoryUsage = 2;
}